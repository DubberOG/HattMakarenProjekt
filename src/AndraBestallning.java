
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author alice
 */
public class AndraBestallning extends javax.swing.JFrame {
    /**
     * Creates new form AndraBestallning
     */
    public AndraBestallning() {
        initComponents();
        fyllcbxOrderID(); 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfDatum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnSpara = new javax.swing.JButton();
        btnAvbryt = new javax.swing.JButton();
        lbBestallning = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblProdukt = new javax.swing.JLabel();
        lblProdukt1 = new javax.swing.JLabel();
        lblOrderID = new javax.swing.JLabel();
        cbxOrderID = new javax.swing.JComboBox<>();
        txtKund = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaProdukter = new javax.swing.JTextArea();
        lblPris = new javax.swing.JLabel();
        txtPris = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        btnÄndraStatus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tfDatum.setColumns(8);
        tfDatum.setText("xxxx-xx-xx");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Status");

        btnSpara.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSpara.setText("Spara Ändringar");
        btnSpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaActionPerformed(evt);
            }
        });

        btnAvbryt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAvbryt.setText("Avbryt");
        btnAvbryt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvbrytActionPerformed(evt);
            }
        });

        lbBestallning.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbBestallning.setText("Ändra beställning");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Kund ID");

        lblProdukt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblProdukt.setText("Produkt ID");

        lblProdukt1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblProdukt1.setText("Datum");

        lblOrderID.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblOrderID.setText("Ange order ID");

        cbxOrderID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxOrderIDActionPerformed(evt);
            }
        });

        txtKund.setColumns(5);

        txtAreaProdukter.setColumns(20);
        txtAreaProdukter.setRows(5);
        jScrollPane1.setViewportView(txtAreaProdukter);

        lblPris.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblPris.setText("Pris");

        btnÄndraStatus.setText("Ändra status");
        btnÄndraStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnÄndraStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(lbBestallning)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblProdukt)
                            .addComponent(lblProdukt1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPris))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKund, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPris, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStatus)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(cbxOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(172, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(btnAvbryt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnÄndraStatus)
                    .addComponent(btnSpara))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbBestallning)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderID)
                    .addComponent(cbxOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtKund, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblProdukt)
                        .addGap(0, 41, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblProdukt1)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tfDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(btnÄndraStatus))
                    .addComponent(lblStatus))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblPris))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSpara)
                    .addComponent(btnAvbryt))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Denna metoden sparar informationen som skrevs vid eventuella ändringar.
    private void btnSparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaActionPerformed
//if(Validering.valideraKundID(txtKund, idb)&& Validering.txtFaltTomt(txtKund)&& Validering.valideraProduktID(txtProdukt, idb)&& Validering.txtFaltTomt(txtProdukt)&& Validering.datumKontroll(tfDatum)&& Validering.txtFaltTomt(txtStatus)){
       try {
        if (Validering.valideraKundID(txtKund, Main.idb) && Validering.txtFaltTomt(txtKund) && Validering.txtFaltTomt(txtPris) && Validering.datumKontroll(tfDatum)) {
            String valdOrder = cbxOrderID.getSelectedItem().toString();
            String nyttKund = txtKund.getText();
            String nyttPris = txtPris.getText();
            String nyttDatum = tfDatum.getText();
           // String nyttStatus = txtStatus.getText();
            String produkter = txtAreaProdukter.getText();

            // Uppdatera Orders-tabellen med de nya värdena
            String updateQueryDatum = "UPDATE Orders SET Datum = '" + nyttDatum + "' WHERE OrderID = '" + valdOrder + "'";
            Main.idb.update(updateQueryDatum);
           // String updateQueryStatus = "UPDATE Orders SET Status = '" + nyttStatus + "' WHERE OrderID = '" + valdOrder + "'";
           // Main.idb.update(updateQueryStatus);
            String updateQueryKund = "UPDATE Orders SET KundID = '" + nyttKund + "' WHERE OrderID = '" + valdOrder + "'";
            Main.idb.update(updateQueryKund);
            String updateQueryProdukt = "UPDATE Orders SET Pris = '" + nyttPris + "' WHERE OrderID = '" + valdOrder + "'";
            Main.idb.update(updateQueryProdukt);

            // Ta bort befintliga poster från ProdukterIOrder-tabellen för den valda ordern
            String TaBort = "DELETE FROM ProdukterIOrder WHERE OrdersID = '" + valdOrder + "'";
            Main.idb.delete(TaBort);

            // Dela upp produkterna från textarean och loopa igenom dem
            String[] produkterArray = produkter.split("\n");
            for (String produkt : produkterArray) {
                // Extrahera ProduktID från varje rad
                String produktID = produkt.trim();
                // Spara kombinationen av OrderID och ProduktID i ProdukterIOrder-tabellen
                String insertQuery = "INSERT INTO ProdukterIOrder (OrdersID, ProduktID) VALUES ('" + valdOrder + "', '" + produktID + "')";
                Main.idb.insert(insertQuery);
            }

            JOptionPane.showMessageDialog(null, "Informationen har ändrats.");
        }
    } catch (InfException ettUndantag) {
        JOptionPane.showMessageDialog(null, "Databasfel!");
        System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
    }

    }//GEN-LAST:event_btnSparaActionPerformed

    private void btnAvbrytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvbrytActionPerformed
        avbrytBestallning();
    }//GEN-LAST:event_btnAvbrytActionPerformed

    //Denna metoden skriver in alla värden beroende på OrderID som valdes i comboboxen.
    private void cbxOrderIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxOrderIDActionPerformed

     txtAreaProdukter.setText("");
     ArrayList<HashMap<String, String>> orderIDLista = new ArrayList<HashMap<String, String>>();
    // ArrayList<HashMap<String, String>> produkterIOrderLista = new ArrayList<HashMap<String, String>>();
try {
    String valdOrder = cbxOrderID.getSelectedItem().toString();
    String fraga = "SELECT Orders.OrderID, Orders.Datum, Orders.Status, Orders.KundID, Orders.Pris, ProdukterIOrder.ProduktID FROM Orders JOIN ProdukterIOrder ON Orders.OrderID = ProdukterIOrder.OrdersID";

    orderIDLista = Main.idb.fetchRows(fraga);

    for (HashMap<String, String> enOrder : orderIDLista) {
        String orderIDFranLista = enOrder.get("OrderID");

        if (orderIDFranLista.equals(valdOrder)) {
            // Sätter in datumet för orden i txt rutan.
            tfDatum.setText(enOrder.get("Datum"));
            // Sätter in namnet för agenten i namnrutan
            lblStatus.setText(enOrder.get("Status"));
            // Sätter in telefonnumret för agenten i telefonrutan
            txtKund.setText(enOrder.get("KundID"));
            // Sätter in epost för agenten i epostrutan
            txtPris.setText(enOrder.get("Pris"));
            // Lägger till ProduktID i txtAreaProdukter
            txtAreaProdukter.append(enOrder.get("ProduktID") + "\n");
        }
    }
} catch (InfException UndantagEn) {
    JOptionPane.showMessageDialog(null, "Databasfel!");
    System.out.println("Internt felmeddelande" + UndantagEn.getMessage());
} catch (Exception UndantagEn) {
    JOptionPane.showMessageDialog(null, "Ett fel uppstod!");
    System.out.println("Internt felmeddelande" + UndantagEn.getMessage());
}

     
     
     
     
    }//GEN-LAST:event_cbxOrderIDActionPerformed

    private void btnÄndraStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnÄndraStatusActionPerformed
        setVisible(false);
        new ReklameraOrder().setVisible(true);
    }//GEN-LAST:event_btnÄndraStatusActionPerformed

    private void fyllcbxOrderID() {
    String fraga = "SELECT OrderID FROM Orders";
    ArrayList<String> allaOrderID;
    try {
        allaOrderID = Main.idb.fetchColumn(fraga);
        for(String ettID : allaOrderID) {
            cbxOrderID.addItem(ettID);
        }
       
        }
      catch (InfException ettUndantag)  {
          JOptionPane.showMessageDialog(null, "Databasfel");
          System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
          
    }
}
         private void avbrytBestallning()
     {
          int val = JOptionPane.showConfirmDialog(null, "Vill du avbryta ändring av beställningen?", "Avbryt", JOptionPane.YES_NO_OPTION);
          if(val == JOptionPane.YES_OPTION)
          {
              dispose();
              new Meny().setVisible(true);
          }
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AndraBestallning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AndraBestallning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AndraBestallning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AndraBestallning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AndraBestallning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvbryt;
    private javax.swing.JButton btnSpara;
    private javax.swing.JButton btnÄndraStatus;
    private javax.swing.JComboBox<String> cbxOrderID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBestallning;
    private javax.swing.JLabel lblOrderID;
    private javax.swing.JLabel lblPris;
    private javax.swing.JLabel lblProdukt;
    private javax.swing.JLabel lblProdukt1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField tfDatum;
    private javax.swing.JTextArea txtAreaProdukter;
    private javax.swing.JTextField txtKund;
    private javax.swing.JTextField txtPris;
    // End of variables declaration//GEN-END:variables
}
