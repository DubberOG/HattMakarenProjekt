
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfException;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 * Här vill vi lägga till information som ska gå till SkrivutFaktura, att denna klass skickar med en del information till nästa klass, ett alternativc
 * Hade varit att vi med den nyckeln skickar med info som gör att v, 
 * 
 */
/**
 *
 * @author willi
 */
public class SkapaFaktura1 extends javax.swing.JFrame {

    /**
     * Creates new form SkapaFraktsedel
     */
    public SkapaFaktura1() {
        initComponents();
        fylliInformation();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSkapa = new javax.swing.JButton();
        btnAvbryt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txAInformation = new javax.swing.JTextArea();
        lbOrderLista = new javax.swing.JLabel();
        lbValjKund = new javax.swing.JLabel();
        cbValjOrderVal = new javax.swing.JComboBox<>();
        btnVal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Skapa faktura");

        btnSkapa.setText("Skapa");
        btnSkapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkapaActionPerformed(evt);
            }
        });

        btnAvbryt.setText("Avbryt");
        btnAvbryt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvbrytActionPerformed(evt);
            }
        });

        txAInformation.setColumns(20);
        txAInformation.setRows(5);
        jScrollPane1.setViewportView(txAInformation);

        lbOrderLista.setText("Information om order:");

        lbValjKund.setText("Välj order:");

        btnVal.setText("Visa order");
        btnVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbValjOrderVal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbValjKund))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbOrderLista)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnAvbryt)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSkapa))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbValjKund)
                    .addComponent(lbOrderLista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSkapa)
                            .addComponent(btnAvbryt)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbValjOrderVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVal)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAvbrytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvbrytActionPerformed
        avbrytFaktura();
    }//GEN-LAST:event_btnAvbrytActionPerformed

    private void btnSkapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkapaActionPerformed
        //Omvandlar resultatet från getSelectedItem() till en sträng
        String cbValet = (String) cbValjOrderVal.getSelectedItem();
        
        //Sparar vikten som angivits i variabeln txtVikt
        try {
        String totalbelopp = Main.idb.fetchSingle("Select Pris from Orders where OrderID = '"+ cbValet +"'");
        String kundID = Main.idb.fetchSingle("Select KundID from Orders where OrderID = '" + cbValet + "' ");
        String faktura = Main.idb.getAutoIncrement("Faktura", "FakturaID");
        Main.idb.update("Update Orders SET status = 'Fakturerad' where OrderID = '" + cbValet + "'");
        //Säkerställer att valet var avsiktligt
        int val = JOptionPane.showConfirmDialog(null, "Vill du skriva ut fakturan?", "Skapa faktura", JOptionPane.YES_NO_OPTION );
        
        if(val == JOptionPane.YES_OPTION)
        {
            Main.idb.insert("INSERT INTO Faktura (FakturaID, Totalbelopp, KundID, OrderID) VALUES ('" + faktura + "','" + totalbelopp + "','" + kundID + "','" + cbValet + "')");
           //Skickar med informationen till klassen SkrivUtFraktsedel
            new SkrivUtFaktura( cbValet, faktura).setVisible(true);
            dispose();
        }
         }
        catch(InfException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }  
    }//GEN-LAST:event_btnSkapaActionPerformed

    private void btnValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValActionPerformed
 
        txAInformation.setText("");
       if(cbValjOrderVal.getSelectedItem() != null)
       {
           String orderID = cbValjOrderVal.getSelectedItem().toString();
           try{
               HashMap <String, String> allInfo = Main.idb.fetchRow("Select Namn, Storlek, Pris from Produkt where ProduktID =(select ProduktID from ProdukterIOrder where OrdersID = '" + orderID +"')");
               String kundNamn = Main.idb.fetchSingle("Select Namn from Kund where KundID = (select KundID from Orders where OrderID ='" + orderID + "')");
               String kundENamn = Main.idb.fetchSingle("Select Efternamn from Kund where KundID = (select KundID from Orders where OrderID ='" + orderID + "')");
               txAInformation.append("Produkt \n");
               txAInformation.append("Namn: " +allInfo.get("Namn") + "\n");
               txAInformation.append("Storlek: " +allInfo.get("Storlek") + "\n");
               txAInformation.append("Pris: " + allInfo.get("Pris") + "\n");
               txAInformation.append("\nKund: ");
               txAInformation.append(kundNamn +" " + kundENamn);
               
               
               
           }catch(InfException e)
           {
               JOptionPane.showMessageDialog(null, e);
           }
       }
       else
       {
           JOptionPane.showMessageDialog(null, "Ingen vald order!");
       }
       
    }//GEN-LAST:event_btnValActionPerformed
    
 
    private void avbrytFaktura()
    {
        {
          int val = JOptionPane.showConfirmDialog(null, "Vill du avbryta beställningen?", "Avbryt", JOptionPane.YES_NO_OPTION);
          if(val == JOptionPane.YES_OPTION)
          {
              dispose();
              new Meny().setVisible(true);
          }
     }
    }
    private void fylliInformation()
    {
        //SQL-fråga för att hämta OrderID från databasen
         try{
        ArrayList<HashMap<String, String>> allaOrderar = Main.idb.fetchRows("SELECT OrderID, KundID FROM Orders WHERE Status = 'Skickad'");
                  
        //Går igenom listan 
                for(HashMap<String, String> order : allaOrderar){
                
            // Hämta orderId från listan och sparar det i en sträng
            String orderID = order.get("OrderID");
            cbValjOrderVal.addItem(orderID);
              
        }
                
         }
                    
              
        catch(InfException ettUndantag){
            JOptionPane.showMessageDialog(null, "Databasfel!");
         }
    }
    


 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SkapaFraktsedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SkapaFraktsedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SkapaFraktsedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SkapaFraktsedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

         /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SkapaFraktsedel().setVisible(true);
            }
        });
     
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvbryt;
    private javax.swing.JButton btnSkapa;
    private javax.swing.JButton btnVal;
    private javax.swing.JComboBox<String> cbValjOrderVal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbOrderLista;
    private javax.swing.JLabel lbValjKund;
    private javax.swing.JTextArea txAInformation;
    // End of variables declaration//GEN-END:variables
}
